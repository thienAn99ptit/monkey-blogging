{"version":3,"file":"static/js/467.4fc9c271.chunk.js","mappings":"uMAEMA,EAAgBC,EAAAA,GAAAA,GAAH,6gBACR,SAACC,GAAD,OAAWA,EAAMC,MAAMC,YAY1B,SAACF,GAAD,OAAWA,EAAMC,MAAME,WACvB,SAACH,GAAD,OAAWA,EAAMC,MAAMG,aAgB/B,IAJgB,SAAC,GAAkC,IAAD,IAA/BC,UAAAA,OAA+B,MAAnB,GAAmB,EAAfC,EAAe,EAAfA,SACjC,OAAO,SAACR,EAAD,CAAeO,UAAWA,EAA1B,SAAsCC,M,+ECxBzCC,EAAiBR,EAAAA,GAAAA,IAAH,oXAWhB,SAACC,GAAD,MACe,YAAfA,EAAMQ,OACNC,EAAAA,EAAAA,IADA,0DAEsB,SAACT,GAAD,OAAWA,EAAMC,MAAMS,aAE7C,SAACV,GAAD,MACe,cAAfA,EAAMQ,OACNC,EAAAA,EAAAA,IADA,+DAwBJ,IAZA,YAAgE,IAAxCH,EAAuC,EAAvCA,SAAuC,IAA7BK,GAAAA,OAA6B,MAAxB,IAAwB,EAAnBH,EAAmB,EAAnBA,KAAMH,EAAa,EAAbA,UAChD,OACE,SAACE,EAAD,CAAgBC,KAAMA,EAAMH,UAAS,wBAAmBA,GAAxD,UACE,SAAC,KAAD,CAASM,GAAIA,EAAb,SAAkBL,Q,2ECjClBM,EAAcb,EAAAA,GAAAA,IAAH,kLAuCjB,IA3BA,YAOI,IANFc,EAMC,EANDA,IACAC,EAKC,EALDA,IACAT,EAIC,EAJDA,UAIC,IAHDM,GAAAA,OAGC,MAHI,KAGJ,MAFDI,OAAAA,OAEC,MAFQ,OAER,MADDC,MAAAA,OACC,MADO,GACP,EACD,OAAIL,GAEA,SAAC,KAAD,CACEA,GAAIA,EACJM,MAAO,CAAEC,QAAS,QAASH,OAAQA,EAAQC,MAAOA,GAFpD,UAIE,SAACJ,EAAD,CAAaP,UAAS,qBAAgBA,GAAwB,IAA9D,UACE,SAAC,IAAD,CAAOQ,IAAKA,EAAKC,IAAKA,EAAKT,UAAU,aAM3C,SAACO,EAAD,CAAaP,UAAS,qBAAgBA,GAAtC,UACE,SAAC,IAAD,CAAOQ,IAAKA,EAAKC,IAAKA,EAAKT,UAAU,Y,yGChCrCc,EAAiBpB,EAAAA,GAAAA,IAAH,geAeL,SAACC,GAAD,OAAWA,EAAMC,MAAMmB,UAoCtC,IAvBiB,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,OAA0C,IAAlCR,OAAAA,OAAkC,MAAzB,OAAyB,MAAjBC,MAAAA,OAAiB,MAAT,GAAS,EAC5E,OACE,UAACG,EAAD,YACE,SAAC,IAAD,CACER,GAAE,kBAAMU,QAAN,IAAMA,OAAN,EAAMA,EAAMG,MACdX,IAAG,OAAEQ,QAAF,IAAEA,OAAF,EAAEA,EAAMI,UACXX,IAAI,GACJC,OAAQA,EACRC,MAAOA,KAET,iBAAKX,UAAU,6CAAf,WACE,iBAAKA,UAAU,SAAf,WACE,SAAC,IAAD,CAAcG,KAAK,UAAUG,GAAE,kBAAMU,QAAN,IAAMA,OAAN,EAAMA,EAAMG,MAA3C,SACGF,KAEH,SAAC,IAAD,CAAWX,GAAE,kBAAMU,QAAN,IAAMA,OAAN,EAAMA,EAAMG,MAAzB,gBAAkCH,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAMK,YAE1C,SAAC,IAAD,CAAUC,KAAK,SAASJ,OAAQA,EAAQlB,UAAU,a,iEChDpDuB,EAAa7B,EAAAA,GAAAA,IAAH,seAeH,SAACC,GAAD,OAAWA,EAAMC,MAAMmB,UAsBpC,IAVA,YAAgD,IAA5BO,EAA2B,EAA3BA,KAAMJ,EAAqB,EAArBA,OAAQlB,EAAa,EAAbA,UAChC,OACE,UAACuB,EAAD,CAAYvB,UAAS,qBAAgBA,GAArC,WACE,iBAAMA,UAAU,YAAhB,SAA6BsB,KAC7B,iBAAMtB,UAAU,cAChB,iBAAMA,UAAU,cAAhB,SAA+BkB,S,2EC9B/BM,EAAc9B,EAAAA,GAAAA,GAAH,sHAqBjB,IAZA,YAAoE,IAA/CO,EAA8C,EAA9CA,SAA8C,IAApCK,GAAAA,OAAoC,MAA/B,IAA+B,EAA1BN,EAA0B,EAA1BA,UAAWG,EAAe,EAAfA,KAClD,OADiE,EAATR,OAEtD,SAAC6B,EAAD,CAAarB,KAAMA,EAAMH,UAAS,qBAAgBA,GAAlD,UACE,SAAC,KAAD,CAASM,GAAIA,EAAb,SAAkBL,Q,mNCGlBwB,EAAwB/B,EAAAA,GAAAA,IAAH,qkDAkCH,SAACC,GAAD,OAAWA,EAAMC,MAAMS,UAqJ/C,UAhGwB,WAAO,IAAD,UACtBc,GAASO,EAAAA,EAAAA,MAATP,KACN,GAAoCQ,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KAwCA,IAtCAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oFACQC,GAASC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,UAAUC,EAAAA,EAAAA,IAAM,OAAQ,KAAMlB,KAClEmB,EAAAA,EAAAA,IAAWL,GAAQ,SAACM,GAClBA,EAAKC,QAAL,mCAAa,WAAOC,GAAP,wFACLC,GAAUC,EAAAA,EAAAA,IAAIP,EAAAA,GAAI,aAAL,UAAmBK,EAAIzB,cAAvB,aAAmB,EAAY4B,YADvC,UAEYC,EAAAA,EAAAA,IAAOH,GAFnB,cAELI,EAFK,OAGLC,GAAUJ,EAAAA,EAAAA,IAAIP,EAAAA,GAAI,QAAL,UAAcK,EAAIzB,cAAlB,aAAc,EAAYgC,QAHlC,UAIYH,EAAAA,EAAAA,IAAOE,GAJnB,OAILE,EAJK,OAMXpB,GAAc,gBACZqB,GAAIT,EAAIS,IACLT,EAAIzB,QAFI,IAGXC,SAAU6B,EAAS9B,OACnBmC,KAAMF,EAASjC,UAVN,2CAAb,0DAHJ,2CADc,yBAAC,WAAD,wBAmBdoC,KACC,CAACjC,KACJa,EAAAA,EAAAA,YAAU,WACR,IAAMqB,GAAcnB,EAAAA,EAAAA,KAClBC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,UACfC,EAAAA,EAAAA,IAAM,aAAc,MAAgB,OAAVT,QAAU,IAAVA,OAAA,EAAAA,EAAYgB,aAAc,MAGtDN,EAAAA,EAAAA,IAAWe,GAAa,SAACd,GACvB,IAAIe,EAAS,GACbf,EAAKC,SAAQ,SAACe,GACZD,EAAOE,MAAP,QACEN,GAAIK,EAAML,IACPK,EAAMvC,YAGbe,EAAgBuB,QAEjB,QAAC1B,QAAD,IAACA,OAAD,EAACA,EAAYgB,WAAYzB,IACvBA,EACL,OACE,SAACM,EAAD,WACE,iBAAKzB,UAAU,YAAf,WACE,iBAAKA,UAAU,cAAf,WACE,SAAC,IAAD,CACEQ,IAAG,OAAEoB,QAAF,IAAEA,OAAF,EAAEA,EAAYR,UACjBpB,UAAU,kBAEZ,iBAAKA,UAAU,YAAf,WACE,SAAC,IAAD,CAAcA,UAAU,OAAxB,mBACG4B,EAAWX,gBADd,aACG,EAAqBwC,QAExB,eAAIzD,UAAU,eAAd,gBAA8B4B,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAYP,SAC1C,SAAC,IAAD,CACEC,MAAM,IAAIoC,MAAOC,qBACjBzC,OAAM,UAAEU,EAAWuB,YAAb,aAAE,EAAiBS,kBAI/B,iBAAK5D,UAAU,eAAf,WACE,gBAAKA,UAAU,gBAAf,UAAgC6D,EAAAA,EAAAA,IAAM,GAAD,cAAIjC,QAAJ,IAAIA,OAAJ,EAAIA,EAAYkC,aACrD,iBAAK9D,UAAU,SAAf,WACE,gBAAKA,UAAU,eAAf,UACE,gBAAKQ,IAAG,UAAEoB,EAAWuB,YAAb,aAAE,EAAiB/B,UAAWX,IAAI,QAE5C,iBAAKT,UAAU,iBAAf,WACE,eAAIA,UAAU,cAAd,mBAA6B4B,EAAWuB,YAAxC,aAA6B,EAAiBS,YAC9C,cAAG5D,UAAU,cAAb,mBAA4B4B,EAAWuB,YAAvC,aAA4B,EAAiBY,wBAInD,iBAAK/D,UAAU,eAAf,WACE,SAAC,IAAD,6CACA,gBAAKA,UAAU,mCAAf,SACG8B,EAAakC,OAAS,GACrBlC,EAAamC,KAAI,SAACC,GAAD,eACf,SAAC,IAAD,CAEElD,KAAMkD,EACNjD,SAAQ,UAAEW,EAAWX,gBAAb,aAAE,EAAqBwC,KAC/BvC,OAAM,UAAEU,EAAWuB,YAAb,aAAE,EAAiBS,SACzBlD,OAAO,cACPC,MAAM,QALDuD,EAAOhB","sources":["components/heading/Heading.js","pages/frontend/homePage/post/PostCategory.js","pages/frontend/homePage/post/PostImage.js","pages/frontend/homePage/post/PostItem.js","pages/frontend/homePage/post/PostMeta.js","pages/frontend/homePage/post/PostTitle.js","pages/frontend/postDetailpage/PostDetailPage.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst HeadingStyles = styled.h2`\r\n  color: ${(props) => props.theme.tertiary};\r\n  font-size: 28px;\r\n  position: relative;\r\n  margin-bottom: 30px;\r\n  font-weight: 600;\r\n  font-family: \"Montserrat\", sans-serif;\r\n  &:before {\r\n    content: \"\";\r\n    width: 50px;\r\n    height: 4px;\r\n    background-image: linear-gradient(\r\n      to right bottom,\r\n      ${(props) => props.theme.primary},\r\n      ${(props) => props.theme.secondary}\r\n    );\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    transform: translate(0, -150%);\r\n  }\r\n  @media screen and (max-width: 1023.98px) {\r\n    font-size: 22px;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\nconst Heading = ({ className = \"\", children }) => {\r\n  return <HeadingStyles className={className}>{children}</HeadingStyles>;\r\n};\r\n\r\nexport default Heading;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst CategoryStyled = styled.div`\r\n  display: inline-block;\r\n  padding: 4px 10px;\r\n  border-radius: 10px;\r\n  color: #6b6b6b;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 100px;\r\n  ${(props) =>\r\n    props.type === \"primary\" &&\r\n    css`\r\n      background-color: ${(props) => props.theme.grayF3};\r\n    `};\r\n  ${(props) =>\r\n    props.type === \"secondary\" &&\r\n    css`\r\n      background-color: white;\r\n    `};\r\n  a {\r\n    display: block;\r\n  }\r\n  @media screen and (max-width: 1023.98px) {\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nfunction PostCategory({ children, to = \"/\", type, className }) {\r\n  return (\r\n    <CategoryStyled type={type} className={`post-category ${className}`}>\r\n      <NavLink to={to}>{children}</NavLink>\r\n    </CategoryStyled>\r\n  );\r\n}\r\nPostCategory.propTypes = {\r\n  type: PropTypes.string,\r\n  to: PropTypes.string,\r\n};\r\n\r\nexport default PostCategory;\r\n","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Image from \"../../../../components/image/Image\";\r\n\r\nconst ImageStyled = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n  .img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    border-radius: 16px;\r\n  }\r\n`;\r\n\r\nfunction PostImage({\r\n  src,\r\n  alt,\r\n  className,\r\n  to = null,\r\n  height = \"100%\",\r\n  width = \"\",\r\n}) {\r\n  if (to) {\r\n    return (\r\n      <NavLink\r\n        to={to}\r\n        style={{ display: \"block\", height: height, width: width }}\r\n      >\r\n        <ImageStyled className={`post-image ${className ? className : \"\"}`}>\r\n          <Image src={src} alt={alt} className=\"img\" />\r\n        </ImageStyled>\r\n      </NavLink>\r\n    );\r\n  }\r\n  return (\r\n    <ImageStyled className={`post-image ${className}`}>\r\n      <Image src={src} alt={alt} className=\"img\" />\r\n    </ImageStyled>\r\n  );\r\n}\r\n\r\nexport default PostImage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PostCategory from \"./PostCategory\";\r\nimport PostImage from \"./PostImage\";\r\nimport PostMeta from \"./PostMeta\";\r\nimport PostTitle from \"./PostTitle\";\r\nconst PostItemStyles = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  .post {\r\n    &-image {\r\n      height: 202px;\r\n      margin-bottom: 20px;\r\n    }\r\n    &-category {\r\n      margin-bottom: 10px;\r\n    }\r\n    &-title {\r\n      font-size: 18px;\r\n      margin-bottom: 20px;\r\n      color: ${(props) => props.theme.gray23};\r\n    }\r\n  }\r\n  @media screen and (max-width: 1023.98px) {\r\n    .post {\r\n      &-image {\r\n        aspect-ratio: 16/9;\r\n        height: auto;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostItem = ({ data, category, author, height = \"100%\", width = \"\" }) => {\r\n  return (\r\n    <PostItemStyles>\r\n      <PostImage\r\n        to={`/${data?.slug}`}\r\n        src={data?.image_url}\r\n        alt=\"\"\r\n        height={height}\r\n        width={width}\r\n      ></PostImage>\r\n      <div className=\"flex flex-col flex-1 w-full justify-around\">\r\n        <div className=\"flex-1\">\r\n          <PostCategory type=\"primary\" to={`/${data?.slug}`}>\r\n            {category}\r\n          </PostCategory>\r\n          <PostTitle to={`/${data?.slug}`}>{data?.title}</PostTitle>\r\n        </div>\r\n        <PostMeta date=\"Mar 23\" author={author} className=\"\"></PostMeta>\r\n      </div>\r\n    </PostItemStyles>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MetaStyled = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: inherit;\r\n  .post-dot {\r\n    display: inline-block;\r\n    width: 4px;\r\n    height: 4px;\r\n    background-color: currentColor;\r\n    border-radius: 100rem;\r\n  }\r\n  .post-title {\r\n    color: ${(props) => props.theme.gray23};\r\n    font-size: 22px;\r\n    margin-bottom: 12px;\r\n  }\r\n  .post-author {\r\n  }\r\n  @media screen and (max-width: 1023.98px) {\r\n    font-size: 10px;\r\n    gap: 6px;\r\n  }\r\n`;\r\n\r\nfunction PostMeta({ date, author, className }) {\r\n  return (\r\n    <MetaStyled className={`post-infor ${className}`}>\r\n      <span className=\"post-time\">{date}</span>\r\n      <span className=\"post-dot\"></span>\r\n      <span className=\"post-author\">{author}</span>\r\n    </MetaStyled>\r\n  );\r\n}\r\n\r\nexport default PostMeta;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst TitleStyled = styled.h3`\r\n  a {\r\n    display: block;\r\n  }\r\n  font-weight: 600;\r\n  line-height: 1.5;\r\n  display: block;\r\n`;\r\n\r\nfunction PostTitle({ children, to = \"/\", className, type, props }) {\r\n  return (\r\n    <TitleStyled type={type} className={`post-title ${className}`}>\r\n      <NavLink to={to}>{children}</NavLink>\r\n    </TitleStyled>\r\n  );\r\n}\r\n\r\nPostTitle.propTypes = {\r\n  to: PropTypes.string,\r\n};\r\n\r\nexport default PostTitle;\r\n","import parse from \"html-react-parser\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  onSnapshot,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Heading from \"../../../components/heading/Heading\";\r\nimport { db } from \"../../../firebase/firebase-config\";\r\nimport PostCategory from \"../homePage/post/PostCategory\";\r\nimport PostImage from \"../homePage/post/PostImage\";\r\nimport PostItem from \"../homePage/post/PostItem\";\r\nimport PostMeta from \"../homePage/post/PostMeta\";\r\nconst PostDetailsPageStyles = styled.div`\r\n  padding-bottom: 100px;\r\n  .post {\r\n    &-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      gap: 40px;\r\n      margin: 40px 0;\r\n    }\r\n    &-feature {\r\n      width: 100%;\r\n      max-width: 640px;\r\n      height: 466px;\r\n      border-radius: 20px;\r\n    }\r\n    &-heading {\r\n      font-weight: bold;\r\n      font-size: 36px;\r\n      margin-bottom: 16px;\r\n    }\r\n    &-info {\r\n      flex: 1;\r\n    }\r\n    &-content {\r\n      max-width: 700px;\r\n      margin: 80px auto;\r\n    }\r\n  }\r\n  .author {\r\n    margin-top: 40px;\r\n    margin-bottom: 80px;\r\n    display: flex;\r\n    border-radius: 20px;\r\n    background-color: ${(props) => props.theme.grayF3};\r\n    &-image {\r\n      width: 200px;\r\n      height: 200px;\r\n      flex-shrink: 0;\r\n      border-radius: inherit;\r\n    }\r\n    &-image img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n      border-radius: inherit;\r\n    }\r\n    &-content {\r\n      flex: 1;\r\n      padding: 20px;\r\n    }\r\n    &-name {\r\n      font-weight: bold;\r\n      margin-bottom: 10px;\r\n      font-size: 20px;\r\n    }\r\n    &-desc {\r\n      font-size: 14px;\r\n      line-height: 2;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1023.98px) {\r\n    padding-bottom: 40px;\r\n    .post {\r\n      &-header {\r\n        flex-direction: column;\r\n      }\r\n      &-feature {\r\n        height: auto;\r\n      }\r\n      &-heading {\r\n        font-size: 26px;\r\n      }\r\n      &-content {\r\n        margin: 40px 0;\r\n      }\r\n    }\r\n    .author {\r\n      flex-direction: column;\r\n      &-image {\r\n        width: 100%;\r\n        height: auto;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostDetailsPage = () => {\r\n  let { slug } = useParams();\r\n  const [postDetail, setPostDetail] = useState({});\r\n  const [postRelation, setPostRelation] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getPage() {\r\n      const colRef = query(collection(db, \"posts\"), where(\"slug\", \"==\", slug));\r\n      onSnapshot(colRef, (snap) => {\r\n        snap.forEach(async (val) => {\r\n          const cateRef = doc(db, \"categories\", val.data()?.categoryId);\r\n          const snapCate = await getDoc(cateRef);\r\n          const userRef = doc(db, \"users\", val.data()?.userId);\r\n          const snapUser = await getDoc(userRef);\r\n\r\n          setPostDetail({\r\n            id: val.id,\r\n            ...val.data(),\r\n            category: snapCate.data(),\r\n            user: snapUser.data(),\r\n          });\r\n        });\r\n      });\r\n    }\r\n    getPage();\r\n  }, [slug]);\r\n  useEffect(() => {\r\n    const postRelaRef = query(\r\n      collection(db, \"posts\"),\r\n      where(\"categoryId\", \"==\", postDetail?.categoryId || \"\")\r\n      // where(\"id\", \"!=\", postDetail?.categoryId || \"\"),\r\n    );\r\n    onSnapshot(postRelaRef, (snap) => {\r\n      let result = [];\r\n      snap.forEach((value) => {\r\n        result.push({\r\n          id: value.id,\r\n          ...value.data(),\r\n        });\r\n      });\r\n      setPostRelation(result);\r\n    });\r\n  }, [postDetail?.categoryId, slug]);\r\n  if (!slug) return;\r\n  return (\r\n    <PostDetailsPageStyles>\r\n      <div className=\"container\">\r\n        <div className=\"post-header\">\r\n          <PostImage\r\n            src={postDetail?.image_url}\r\n            className=\"post-feature\"\r\n          ></PostImage>\r\n          <div className=\"post-info\">\r\n            <PostCategory className=\"mb-6\">\r\n              {postDetail.category?.name}\r\n            </PostCategory>\r\n            <h1 className=\"post-heading\">{postDetail?.title}</h1>\r\n            <PostMeta\r\n              date={new Date().toLocaleDateString()}\r\n              author={postDetail.user?.fullname}\r\n            ></PostMeta>\r\n          </div>\r\n        </div>\r\n        <div className=\"post-content\">\r\n          <div className=\"entry-content\">{parse(`${postDetail?.content}`)}</div>\r\n          <div className=\"author\">\r\n            <div className=\"author-image\">\r\n              <img src={postDetail.user?.image_url} alt=\"\" />\r\n            </div>\r\n            <div className=\"author-content\">\r\n              <h3 className=\"author-name\">{postDetail.user?.fullname}</h3>\r\n              <p className=\"author-desc\">{postDetail.user?.description}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"post-related\">\r\n          <Heading>Bài viết liên quan</Heading>\r\n          <div className=\"grid-layout grid-layout--primary\">\r\n            {postRelation.length > 0 &&\r\n              postRelation.map((postRe) => (\r\n                <PostItem\r\n                  key={postRe.id}\r\n                  data={postRe}\r\n                  category={postDetail.category?.name}\r\n                  author={postDetail.user?.fullname}\r\n                  height=\"max-content\"\r\n                  width=\"100%\"\r\n                ></PostItem>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </PostDetailsPageStyles>\r\n  );\r\n};\r\n\r\nexport default PostDetailsPage;\r\n"],"names":["HeadingStyles","styled","props","theme","tertiary","primary","secondary","className","children","CategoryStyled","type","css","grayF3","to","ImageStyled","src","alt","height","width","style","display","PostItemStyles","gray23","data","category","author","slug","image_url","title","date","MetaStyled","TitleStyled","PostDetailsPageStyles","useParams","useState","postDetail","setPostDetail","postRelation","setPostRelation","useEffect","colRef","query","collection","db","where","onSnapshot","snap","forEach","val","cateRef","doc","categoryId","getDoc","snapCate","userRef","userId","snapUser","id","user","getPage","postRelaRef","result","value","push","name","Date","toLocaleDateString","fullname","parse","content","description","length","map","postRe"],"sourceRoot":""}