{"version":3,"file":"static/js/946.5feb5853.chunk.js","mappings":"uOAEMA,EAAcC,EAAAA,GAAAA,IAAH,2IAWjB,EAJc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACf,OAAO,SAACF,EAAD,UAAcE,M,gJCPjBC,EAAcF,EAAAA,GAAAA,IAAH,6hBAKF,SAACG,GAAD,OACTA,EAAMC,QAAU,sBAAwB,eAEtB,SAACD,GAAD,OAAWA,EAAME,MAAMC,UAGlC,SAACH,GAAD,OAAWA,EAAME,MAAME,SAuCpC,IArBA,YAOI,IAAD,IANDC,KAAAA,OAMC,MANM,GAMN,MALDC,KAAAA,OAKC,MALM,OAKN,EAJDR,EAIC,EAJDA,SAIC,IAHDG,QAAAA,OAGC,SAFDM,EAEC,EAFDA,QACGP,GACF,YACOQ,GAAUC,EAAAA,EAAAA,IAAc,CAC9BF,QAAAA,EACAF,KAAAA,EACAK,aAAc,KAHRF,MAKR,OACE,UAACT,EAAD,CAAaE,QAASA,EAAtB,WACE,kCAAOK,KAAMA,EAAMK,GAAIN,GAAUG,GAAWR,IAC3CC,GAAWH,O,0EChBlB,IA5BA,YAA2C,IAAZS,EAAW,EAAXA,QAC7B,GAA4CK,EAAAA,EAAAA,WAAS,GAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,OACE,+BACE,SAAC,IAAD,CACEP,QAASA,EACTF,KAAK,WACLC,KAAMO,EAAiB,OAAS,WAChCE,UAAU,QACVC,YAAY,6BACZf,SAAO,EANT,SAQGY,GACC,SAAC,KAAD,CACEI,QAAS,kBAAMH,GAAkB,SAACI,GAAD,OAAWA,MAC5CH,UAAU,wBAGZ,SAAC,KAAD,CACEE,QAAS,kBAAMH,GAAkB,SAACI,GAAD,OAAWA,MAC5CH,UAAU,qB,sNCtBhBI,EAActB,EAAAA,GAAAA,MAAH,gFACN,SAACG,GAAD,OAAWA,EAAME,MAAMkB,YAYlC,MARA,YAA4D,IAA3CL,EAA0C,EAA1CA,UAAWM,EAA+B,EAA/BA,QAASvB,EAAsB,EAAtBA,SAAaE,GAAS,YACzD,OACE,SAACmB,GAAD,gBAAaE,QAASA,EAASN,UAAWA,GAAef,GAAzD,aACGF,O,uQCsBDwB,EAASC,EAAAA,GAAW,CACxBC,SAAUD,EAAAA,KAAaE,SAAS,+BAChCC,MAAOH,EAAAA,KAAaG,MAAM,2BAC1BC,SAAUJ,EAAAA,KAEPK,IAAI,EAAG,sBACPH,SAAS,gCAgGd,UA7FA,WACE,IAAMI,GAAWC,EAAAA,EAAAA,MAEjB,GAA4ClB,EAAAA,EAAAA,WAAS,GAArD,eACA,GADA,WAMImB,EAAAA,EAAAA,IAAQ,CAAEC,KAAM,WAAYC,UAAUC,EAAAA,EAAAA,GAAYZ,MAJpDf,EADF,EACEA,QACA4B,EAFF,EAEEA,aAFF,IAGEC,UAAaC,EAHf,EAGeA,OAAQC,EAHvB,EAGuBA,QAASC,EAHhC,EAGgCA,aAK1BC,GARN,EAIEC,MAIgB,mCAAG,WAAOC,GAAP,oEACdJ,EADc,kEAEAK,EAAAA,EAAAA,IACjBC,EAAAA,EACAF,EAAOhB,MACPgB,EAAOf,UALU,qBAOnBkB,EAAAA,GAAAA,QAAc,2BAPK,UAQbC,EAAAA,EAAAA,IAAcF,EAAAA,EAAAA,YAAkB,CACpCG,YAAaL,EAAOlB,WATH,yBAWbwB,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAASN,EAAAA,EAAAA,YAAAA,KAAuB,CACnDpB,SAAUkB,EAAOlB,SACjBE,MAAOgB,EAAOhB,MACdC,SAAUe,EAAOf,SACjBwB,SAAUC,GAAAA,CAAQV,EAAOlB,SAAU,CAAE6B,OAAO,IAC5CC,WAAWC,EAAAA,EAAAA,QAhBM,QAkBnB1B,EAAS,KAlBU,4CAAH,uDAqClB,OAjBA2B,EAAAA,EAAAA,YAAU,WACR,IAC2B,EADrBC,EAAaC,OAAOhB,OAAOL,GAC7BoB,EAAWE,OAAS,IACtBd,EAAAA,EAAAA,IAAK,UAACY,EAAW,UAAZ,aAAC,EAAeG,QAAS,CAC5BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVlE,MAAO,UACPI,KAAM,YAGT,CAAC+B,KAGF,kBAAMtB,UAAU,OAAOsD,SAAUlC,EAAaK,GAA9C,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAOnB,QAAQ,WAAWN,UAAU,QAApC,uBAGA,SAAC,EAAAuD,EAAD,CACE/D,QAASA,EACTF,KAAK,WACLC,KAAK,OACLS,UAAU,QACVC,YAAY,mCAGhB,UAAC,IAAD,YACE,SAAC,IAAD,CAAOK,QAAQ,QAAQN,UAAU,QAAjC,4BAGA,SAAC,EAAAuD,EAAD,CACE/D,QAASA,EACTF,KAAK,QACLC,KAAK,QACLS,UAAU,QACVC,YAAY,wCAGhB,UAAC,IAAD,YACE,SAAC,IAAD,CAAOK,QAAQ,WAAWN,UAAU,QAApC,uBAGA,SAAC,IAAD,CAAqBR,QAASA,QAEhC,iBAAKQ,UAAU,eAAf,yCAC6B,SAAC,KAAD,CAASwD,GAAG,WAAZ,uBAE7B,gBAAKxD,UAAU,SAAf,UACE,SAAC,IAAD,CAAQT,KAAK,SAASkE,UAAWjC,EAAjC","sources":["components/field/Field.js","components/input/Input.js","components/input/InputPasswordToggle.js","components/label/Label.js","pages/frontend/Sign/SignUp.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nconst FieldStyles = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  row-gap: 10px;\r\n  margin-bottom: 25px;\r\n`;\r\nconst Field = ({ children }) => {\r\n  return <FieldStyles>{children}</FieldStyles>;\r\n};\r\n\r\nexport default Field;\r\n","import { useController } from \"react-hook-form\";\r\nimport styled from \"styled-components\";\r\nimport { EyeCloseIcon, EyeIcon } from \"../icons/Icons\";\r\nconst InputStyles = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  input {\r\n    width: 100%;\r\n    padding: ${(props) =>\r\n      props.hasIcon ? \"16px 60px 16px 20px\" : \"16px 20px\"};\r\n    background-color: transparent;\r\n    border: 1px solid ${(props) => props.theme.grayf1};\r\n    border-radius: 8px;\r\n    transition: all 0.2s linear;\r\n    color: ${(props) => props.theme.black};\r\n    font-size: 14px;\r\n  }\r\n\r\n  input::-webkit-input-placeholder {\r\n    color: #b2b3bd;\r\n  }\r\n  input::-moz-input-placeholder {\r\n    color: #b2b3bd;\r\n  }\r\n  .input-icon {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    cursor: pointer;\r\n  }\r\n`;\r\nfunction Input({\r\n  name = \"\",\r\n  type = \"text\",\r\n  children,\r\n  hasIcon = false,\r\n  control,\r\n  ...props\r\n}) {\r\n  const { field } = useController({\r\n    control,\r\n    name,\r\n    defaultValue: \"\",\r\n  });\r\n  return (\r\n    <InputStyles hasIcon={hasIcon}>\r\n      <input type={type} id={name} {...field} {...props} />\r\n      {hasIcon && children}\r\n    </InputStyles>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { useState } from \"react\";\r\nimport { EyeCloseIcon, EyeIcon } from \"../icons/Icons\";\r\nimport Input from \"./Input\";\r\n\r\nfunction InputPasswordToggle({ control }) {\r\n  const [togglePassword, setTogglePassword] = useState(false);\r\n  return (\r\n    <>\r\n      <Input\r\n        control={control}\r\n        name=\"password\"\r\n        type={togglePassword ? \"text\" : \"password\"}\r\n        className=\"input\"\r\n        placeholder=\"Please enter your Password\"\r\n        hasIcon\r\n      >\r\n        {togglePassword ? (\r\n          <EyeIcon\r\n            onClick={() => setTogglePassword((prev) => !prev)}\r\n            className=\"input-icon w-4 h-4\"\r\n          ></EyeIcon>\r\n        ) : (\r\n          <EyeCloseIcon\r\n            onClick={() => setTogglePassword((prev) => !prev)}\r\n            className=\"input-icon\"\r\n          ></EyeCloseIcon>\r\n        )}\r\n      </Input>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InputPasswordToggle;\r\n","import styled from \"styled-components\";\r\n\r\nconst LabelStyled = styled.label`\r\n  color: ${(props) => props.theme.grayDark};\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n`;\r\nfunction Label({ className, htmlFor, children, ...props }) {\r\n  return (\r\n    <LabelStyled htmlFor={htmlFor} className={className} {...props}>\r\n      {children}\r\n    </LabelStyled>\r\n  );\r\n}\r\n\r\nexport default Label;\r\n","import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport styled from \"styled-components\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  updateProfile,\r\n} from \"firebase/auth\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  setDoc,\r\n  doc,\r\n  serverTimestamp,\r\n} from \"firebase/firestore\";\r\n\r\nimport { auth, db } from \"../../../firebase/firebase-config\";\r\nimport Image from \"../../../components/image/Image\";\r\nimport { Input } from \"../../../components/input\";\r\nimport { Label } from \"../../../components/label\";\r\nimport { Field } from \"../../../components/field\";\r\nimport { Button } from \"../../../components/button\";\r\nimport { toast } from \"react-toastify\";\r\nimport { flip } from \"lodash\";\r\nimport { useEffect } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport InputPasswordToggle from \"../../../components/input/InputPasswordToggle\";\r\nimport slugify from \"slugify\";\r\n\r\nconst schema = yup.object({\r\n  fullname: yup.string().required(\"Please enter your full name\"),\r\n  email: yup.string().email(\"Please enter your email\"),\r\n  password: yup\r\n    .string()\r\n    .min(6, \"Please 6 character\")\r\n    .required(\"Please enter your password\"),\r\n});\r\n\r\nfunction SignUp() {\r\n  const navigate = useNavigate();\r\n\r\n  const [togglePassword, setTogglePassword] = useState(false);\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors, isValid, isSubmitting },\r\n    watch,\r\n  } = useForm({ mode: \"onChange\", resolver: yupResolver(schema) });\r\n\r\n  // Handle Sign Up\r\n  const handleSignUp = async (values) => {\r\n    if (!isValid) return;\r\n    const user = await createUserWithEmailAndPassword(\r\n      auth,\r\n      values.email,\r\n      values.password\r\n    );\r\n    toast.success(\"Create User success !!!\");\r\n    await updateProfile(auth.currentUser, {\r\n      displayName: values.fullname,\r\n    });\r\n    await setDoc(doc(db, \"users\", auth.currentUser.uid), {\r\n      fullname: values.fullname,\r\n      email: values.email,\r\n      password: values.password,\r\n      username: slugify(values.fullname, { lower: true }),\r\n      createAdd: serverTimestamp(),\r\n    });\r\n    navigate(\"/\");\r\n  };\r\n  useEffect(() => {\r\n    const errorArray = Object.values(errors);\r\n    if (errorArray.length > 0) {\r\n      toast(errorArray[0]?.message, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"colored\",\r\n        type: \"error\",\r\n      });\r\n    }\r\n  }, [errors]);\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit(handleSignUp)}>\r\n      <Field>\r\n        <Label htmlFor=\"fullname\" className=\"label\">\r\n          Fullname\r\n        </Label>\r\n        <Input\r\n          control={control}\r\n          name=\"fullname\"\r\n          type=\"text\"\r\n          className=\"input\"\r\n          placeholder=\"Please enter your fullname\"\r\n        />\r\n      </Field>\r\n      <Field>\r\n        <Label htmlFor=\"email\" className=\"label\">\r\n          Email address\r\n        </Label>\r\n        <Input\r\n          control={control}\r\n          name=\"email\"\r\n          type=\"email\"\r\n          className=\"input\"\r\n          placeholder=\"Please enter your email address\"\r\n        />\r\n      </Field>\r\n      <Field>\r\n        <Label htmlFor=\"password\" className=\"label\">\r\n          Password\r\n        </Label>\r\n        <InputPasswordToggle control={control}></InputPasswordToggle>\r\n      </Field>\r\n      <div className=\"have-account\">\r\n        You have already account ? <NavLink to=\"/sign-in\">Login</NavLink>\r\n      </div>\r\n      <div className=\"button\">\r\n        <Button type=\"submit\" isLoading={isSubmitting}>\r\n          Sign Up\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n"],"names":["FieldStyles","styled","children","InputStyles","props","hasIcon","theme","grayf1","black","name","type","control","field","useController","defaultValue","id","useState","togglePassword","setTogglePassword","className","placeholder","onClick","prev","LabelStyled","grayDark","htmlFor","schema","yup","fullname","required","email","password","min","navigate","useNavigate","useForm","mode","resolver","yupResolver","handleSubmit","formState","errors","isValid","isSubmitting","handleSignUp","watch","values","createUserWithEmailAndPassword","auth","toast","updateProfile","displayName","setDoc","doc","db","username","slugify","lower","createAdd","serverTimestamp","useEffect","errorArray","Object","length","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","onSubmit","I","to","isLoading"],"sourceRoot":""}